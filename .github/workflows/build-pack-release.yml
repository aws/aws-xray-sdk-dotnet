name: Build-Pack-Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: The version to tag the release with, e.g., 1.2.0, 1.3.0
        required: true

permissions:
  id-token: write
  contents: read

jobs:
    build-pack-release:
        runs-on: ${{ matrix.os }}

        env:
            DOTNET_MULTILEVEL_LOOKUP: 1
            SNK_BUCKET: srprash-xray-dotnet-assets

        strategy:
            fail-fast: true
            matrix:
                os: [windows-latest]

        steps:
        - name: Checkout repository
          uses: actions/checkout@v2

        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            role-to-assume: ${{ secrets.AWS_ASSUME_ROLE_ARN_RELEASE }}
            aws-region: us-west-2

        - name: Get Strong-Naming Key
          run: aws s3api get-object --bucket ${{ env.SNK_BUCKET }} --key awsxrayrecorder.dll.snk awsxrayrecorder.dll.snk
          
        - name: Install dependencies
          run: dotnet restore .\sdk\AWSXRayRecorder.sln

        - name: Build solution
          run: dotnet build .\sdk\AWSXRayRecorder.sln /p:Configuration=Release --no-restore /p:AssemblyOriginatorKeyFile=${{ github.workspace }}\awsxrayrecorder.dll.snk

        - name: Assume signer role
          run: |
            $resp = aws sts assume-role --role-arn ${{ secrets.AWS_ARTIFACT_ACCESS_ROLE_ARN }} --external-id ${{ secrets.AWS_ROLE_EXTERNAL_ID }} --role-session-name AWSSigner-Session
            $ak = echo $resp | jq -r ".Credentials.AccessKeyId"
            $sk = echo $resp | jq -r ".Credentials.SecretAccessKey"
            $tk = echo $resp | jq -r ".Credentials.SessionToken"
            
            # It is important that we mask the credentials before even setting it in the env var.
            # Otherwise it will leak the secrets in GH workflow logs.
            Write-Output "::add-mask::$ak"
            Write-Output "::add-mask::$sk"
            Write-Output "::add-mask::$tk"

            echo "AWS_ACCESS_KEY_ID=$ak" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append
            echo "AWS_SECRET_ACCESS_KEY=$sk" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append
            echo "AWS_SESSION_TOKEN=$tk" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append

        - name: Invoke Signing script
          run: |
            .\buildtools\sign_files.ps1 -Path .\sdk\src -Filter AWSXRayRecorder.*.dll -Recurse

        - name: Pack nugets
          run: |
            dotnet pack .\sdk\AWSXRayRecorder.sln  --no-build -c Release -o .\Deployment\nuget-packages
            nuget pack .\sdk\AWSXRayRecorder.nuspec -OutputDirectory .\Deployment\nuget-packages -Exclude **

        - name: Upload nugets as actions artifact
          uses: actions/upload-artifact@v2
          with:
            name: nuget-packages
            path: Deployment/nuget-packages/

        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            role-to-assume: ${{ secrets.AWS_ASSUME_ROLE_ARN_RELEASE }}
            aws-region: us-west-2

        - name: Assume nuget role
          run: |
            $resp = aws sts assume-role --role-arn ${{ secrets.NUGET_ACCESS_ROLE_ARN}} --role-session-name NugetAccess-Session
            $ak = echo $resp | jq -r ".Credentials.AccessKeyId"
            $sk = echo $resp | jq -r ".Credentials.SecretAccessKey"
            $tk = echo $resp | jq -r ".Credentials.SessionToken"

            # It is important that we mask the credentials before even setting it in the env var.
            # Otherwise it will leak the secrets in GH workflow logs.
            Write-Output "::add-mask::$ak"
            Write-Output "::add-mask::$sk"
            Write-Output "::add-mask::$tk"

            echo "AWS_ACCESS_KEY_ID=$ak" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append
            echo "AWS_SECRET_ACCESS_KEY=$sk" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append
            echo "AWS_SESSION_TOKEN=$tk" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append

        - name: Get and set the Nuget key
          run: | 
            $nugetKey = aws secretsmanager get-secret-value --region us-west-2 --secret-id ${{ secrets.NUGET_SECRETS_ID }} | jq -r ".SecretString"
            Write-Output "::add-mask::$nugetKey"
            nuget setapikey $nugetKey -Source https://api.nuget.org/v3/index.json

        # TODO: uncomment this step once the rest of the workflow has been verified in prod.
        #- name: Publish nugets
        #  run: nuget push .\Deployment\nuget-packages\*.nupkg
            
        - name: Create draft release
          id: create_release
          uses: actions/create-release@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            tag_name: 'V${{ github.event.inputs.version }}'
            release_name: 'Release ${{ github.event.inputs.version }}'
            body: 'Please refer [change-log](https://github.com/aws/aws-xray-sdk-dotnet/blob/master/CHANGELOG.md) for more details'
            draft: true
            prerelease: false

        - name: Clean up
          run: |
            rm .\awsxrayrecorder.dll.snk
            
          